Maven
(1. 소스코드 관리 - 협업시 개별 개발자들의 로컬 개발환경의 일관성 제공
 2. 배포 - 작성된 데스크탑 어플리케이션 or 웹 어플리케이션의 배포[jar|war|etc.] 환경 구축 
 3. 라이브러리 의존성 환경
 4. 릴리즈
 5. 리포팅)
 
개발환경 
1. http://maven.apache.org에서 mavan 다운로드
   apache-maven-3.0.4-bin.zip
   압축해제

2. 환경변수 등록
   %MAVEN_HOME%\bin;

3. 메이븐 설정
   메이븐은 메이븐 중앙저장소에서 메이븐 설정파일(pom[Project Object Model].xml)에
   선언된 아티팩트 이름으로 라이브러리를 다운로드해서
  settings.xml내에 선언된 로컬 디렉토리에 저장시켜놓습니다.

  3.1 pom.xml 구조
      3.1.1 프로젝트 설정 - groupid, artifactid, version
                                모듈, 상속, 라이브러리의존성 설정
      3.1.2 프로젝트 정보 - 프로젝트명, 프로젝트 url, 프로젝트 참여자, 라이센스
      3.1.3 빌드 설정 - 소스 및 테스트 소스 패스
                           리소스 패스
                           빌드시 활용되는 플러그인 설정
                           리포팅
                     **** 메이븐이 미리정의한 빌드단계를 라이프사이클이라고 하며, 각 단계를 페이즈라고 정의함.
                          (이전 빌드 결과물의 삭제 -> 컴파일에 필요한 자원의 복사 -> 소스코드 컴파일 -> 테스트 -> 패키징 -> 빌드)
                          
      3.1.4 릴리즈 - 릴리즈 정보, 릴리즈 대상 설정
      
4. 이클립스 maven 플러그인 다운로드 및 설치
   Add 버튼 클릭으로 http://download.eclipse.org/releases/indigo 찾아서 클릭
   Collaboration -> m2e-Maven Integration for Eclipse
                    slf4j over logback logging(Optional)
    체크 후 설치

5. Window -> Preferences -> Maven -> Installations -> Add버튼 클릭 후 Maven 설치  폴더 선택
   Window -> Preferences -> Maven -> User Settings -> Browse 버튼 클릭 후 Maven 설치 폴더의 conf내에 settings.xml 선택 후
   Update Settings 버튼 클릭
   
6. 메이븐 적용 대상 프로젝트의 Properties 선택
   Deployment Assembly -> Source                    Deploy Path    설정을위해 Add 버튼 선택 후  
                          Maven Dependancies        WEB-INF/lib
   
   Java Build Path Entries 선택 후 Maven Dependancies 선택 적용
   
7. 프로젝트에 메이븐 적용 및 환경 설정
   7.1 다아나믹 웹 프로젝트 생성
       Navigator 뷰를통해 .settings의 org.eclipse.wst.common.component 설정을 변경
           - <wb-resource deploy-path="/" source-path="/target/m2e-wtp/web-resources"/>
             <wb-resource deploy-path="/" source-path="/src/main/webapp"/>
             <wb-resource deploy-path="/WEB-INF/classes" source-path="/src/main/java"/>
             <wb-resource deploy-path="/WEB-INF/classes" source-path="/conf/main/java"/>
             <wb-resource deploy-path="/WEB-INF/classes" source-path="/src/main/resources"/>
             <wb-resource deploy-path="/WEB-INF/classes" source-path="/src/test/java"/>
             <wb-resource deploy-path="/WEB-INF/classes" source-path="/src/test/resources"/>
        프로젝트의 구조를 상위 wb-resource의 source-path와 동일하게 변경
         
8. Maven 중앙저장소
   http://search.maven.org
    
   